
lastdown () {
	if [[ $# == 1 ]]; then
		ls -1t ~/Downloads | head -n $1 | sed "s|^|$HOME/Downloads/|"
	else
		ls -1t ~/Downloads | head -n 1 | sed "s|^|$HOME/Downloads/|"
	fi
}

# Get the line numbers of occurences of argument in second input
#  or if no second input, then piped input
function lineNumbers {
	if [ -z ${2+x} ]; then
		grep -n "$1" | cut -d : -f 1;
	else
		echo -e "$2" | grep -n "$1" | cut -d : -f 1;
	fi;
}

# Output line $1 to line $2-1 of the input
#  (input text is 3rd variable or piped input)
function section {
	if [ -z ${3+x} ]; then
		head -n $2 | tail -n +$1;
	else
		echo "$3" | head -n $(($2-1)) | tail -n +$1;
	fi;
}

# Mac-only stuff from here on
if [ `uname` = 'Darwin' ]; then

# Identify whether using discrete graphics card or not
function identifyGfxCard {
	chip="$(system_profiler SPDisplaysDataType | egrep '^\W+Displays:|Chipset' \
		| awk '/Displays/ {disp=1} !disp' | tail -n 1)"
	if echo "$chip" | grep -q Intel; then
		int="Integrated";
	else
		int="Discrete";
	fi;
	echo $chip | sed "s/ *Chipset Model/$int graphics/"
}

fi;
